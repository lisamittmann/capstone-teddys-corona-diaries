{"version":3,"sources":["components/RecipeHeader.js","components/RecipeCoronaDetails.js","components/RecipePreparation.js","pages/RecipePage.js","service/recipeApiService.js","App.js","components/GlobalStyle.js","index.js"],"names":["RecipeHeader","recipeName","recipeDescription","Header","styled","section","RecipeCoronaDetails","CoronaBox","RecipePreparation","ingredients","preparationSteps","PreparationGrid","map","ingredient","amountAndUnit","name","sort","oneStep","anotherStep","stepNumber","localeCompare","step","stepDescription","RecipePage","recipeId","useParams","useState","recipe","setRecipe","useEffect","axios","get","then","response","data","getRecipe","RecipeWrapper","src","imageUrl","alt","diaryEntry","steps","App","exact","path","createGlobalStyle","ReactDOM","render","StrictMode","GlobalStyle","document","getElementById"],"mappings":"uPAEe,SAASA,EAAT,GAAwD,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,kBAC9C,OACI,eAACC,EAAD,WACI,6BAAKF,IACL,4BAAIC,OAKhB,IAAMC,EAASC,IAAOC,QAAV,2EAAGD,CAAH,+KCTG,SAASE,IACpB,OACI,cAACC,EAAD,UACI,wDAKZ,IAAMA,EAAYH,IAAOC,QAAV,oFAAGD,CAAH,sLCRA,SAASI,EAAT,GAA6D,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,iBACpD,OACI,eAACC,EAAD,WACI,8BACI,+BACI,wCAEIF,EAAYG,KAAI,SAAAC,GAAU,OACtB,+BAA2BA,EAAWC,cAAtC,IAAsDD,EAAWE,OAAxDF,EAAWE,cAIpC,8BACI,+BACI,4CAEIL,EAAiBM,MAAK,SAACC,EAASC,GAAV,OAA0BD,EAAQE,WAAWC,cAAcF,EAAYC,eACxFP,KAAI,SAAAS,GAAI,OACL,6BAA2BA,EAAKC,iBAAvBD,EAAKF,uBAS9C,IAAMR,EAAkBP,IAAOC,QAAV,qFAAGD,CAAH,sZCpBN,SAASmB,IAAc,IAC3BC,EAAYC,cAAZD,SAD0B,EAELE,qBAFK,mBAE1BC,EAF0B,KAElBC,EAFkB,KAQjC,OAJAC,qBAAU,YCTW,SAACL,GAAD,OACrBM,IAAMC,IAAN,UAHY,UAGZ,YAAwBP,IAAYQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SDS1DC,CAAUX,GAAUQ,KAAKJ,KAC1B,CAACJ,IAGA,kCACKG,GACD,eAACS,EAAD,WACI,qBAAKC,IAAKV,EAAOW,SAAUC,IAAKZ,EAAOZ,OACvC,cAACf,EAAD,CAAcC,WAAY0B,EAAOZ,KAAMb,kBAAmByB,EAAOa,aACjE,cAAClC,EAAD,IACA,cAACE,EAAD,CAAmBC,YAAakB,EAAOlB,YAAaC,iBAAkBiB,EAAOc,aAO7F,IAAML,EAAgBhC,IAAOC,QAAV,4EAAGD,CAAH,mKEdJsC,I,EAAAA,EAbf,WACI,OACI,gCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,0DAEJ,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACI,cAACrB,EAAD,U,QCTDsB,cAAf,kZ,QCKAC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,eAAC,IAAD,WACI,cAACC,EAAD,IACA,cAAC,EAAD,SAGRC,SAASC,eAAe,W","file":"static/js/main.54dd56b0.chunk.js","sourcesContent":["import styled from 'styled-components/macro'\n\nexport default function RecipeHeader({recipeName, recipeDescription}) {\n    return(\n        <Header>\n            <h3>{recipeName}</h3>\n            <p>{recipeDescription}</p>\n        </Header>\n    )\n}\n\nconst Header = styled.section`\n  display: grid;\n  grid-auto-rows: auto auto;\n\n  h3 {\n    padding: 10px 25px 10px 25px;\n    margin: 0;\n  }\n\n  p {\n    padding: 10px 25px 10px 25px;\n    font-size: 16px;\n    color: var(--color-battleship-grey);\n    margin: 0;\n  }\n`","import styled from 'styled-components/macro'\n\nexport default function RecipeCoronaDetails() {\n    return (\n        <CoronaBox>\n            <div>Corona Details here</div>\n        </CoronaBox>\n    )\n}\n\nconst CoronaBox = styled.section`\n  display: flex;\n  justify-content: center;\n  height: 45px;\n  font-size: 16px;\n  \n  div {\n    background: var(--color-alabaster);\n    margin-left: 25px;\n    margin-right: 25px;\n    width: 100%;\n    padding: 10px 16px 10px 16px;\n  }\n`","import styled from 'styled-components/macro'\n\nexport default function RecipePreparation({ingredients, preparationSteps}) {\n    return (\n        <PreparationGrid>\n            <div>\n                <ul>\n                    <p>Zutaten</p>\n                    {\n                        ingredients.map(ingredient => (\n                            <li key={ingredient.name}>{ingredient.amountAndUnit} {ingredient.name}</li>))\n                    }\n                </ul>\n            </div>\n            <div>\n                <ol>\n                    <p>Zubereitung</p>\n                    {\n                        preparationSteps.sort((oneStep, anotherStep) => oneStep.stepNumber.localeCompare(anotherStep.stepNumber))\n                            .map(step => (\n                                <li key={step.stepNumber}>{step.stepDescription}</li>\n                            ))\n                    }\n                </ol>\n            </div>\n        </PreparationGrid>\n    )\n}\n\nconst PreparationGrid = styled.section`\n  display: grid;\n  @media (min-width: 500px) {\n    grid-template-columns: 40% 60%;\n  }\n  grid-gap: 16px;\n  margin-left: 25px;\n  @media (min-width: 500px) {\n    margin-right: 41px;\n  }\n  @media (max-width: 499px){\n    margin-right: 25px; \n  }\n  font-size: 15px;\n\n  div {\n    background: var(--color-cultured);\n    box-sizing: content-box;\n    width: 100%;\n  }\n\n  ul {\n    list-style: none;\n    padding-right: 16px;\n    padding-left: 16px;\n  }\n\n  ol {\n    margin-right: 16px;\n  }\n\n  p {\n    font-weight: bold;\n  }\n\n  li + li {\n    padding-top: 10px;\n  }\n`","import styled from 'styled-components/macro'\nimport {useState, useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {getRecipe} from \"../service/recipeApiService\";\nimport RecipeHeader from \"../components/RecipeHeader\";\nimport RecipeCoronaDetails from \"../components/RecipeCoronaDetails\";\nimport RecipePreparation from \"../components/RecipePreparation\";\n\n\nexport default function RecipePage() {\n    const {recipeId} = useParams()\n    const [recipe, setRecipe] = useState()\n\n    useEffect(() => {\n        getRecipe(recipeId).then(setRecipe)\n    }, [recipeId])\n\n    return (\n        <section>\n            {recipe &&\n            <RecipeWrapper>\n                <img src={recipe.imageUrl} alt={recipe.name}/>\n                <RecipeHeader recipeName={recipe.name} recipeDescription={recipe.diaryEntry}/>\n                <RecipeCoronaDetails/>\n                <RecipePreparation ingredients={recipe.ingredients} preparationSteps={recipe.steps}/>\n            </RecipeWrapper>\n            }\n        </section>\n    )\n}\n\nconst RecipeWrapper = styled.section`\n  display: grid;\n  grid-template-rows: auto auto auto auto;\n  overflow-y: scroll;\n  font-family: Roboto;\n  grid-gap: 16px;\n  margin-bottom: 16px;\n\n  img {\n    object-fit: contain;\n    width: 100%;\n  }\n\n\n`","import axios from \"axios\";\n\nconst baseUrl = \"/recipe\"\n\nexport const getRecipe = (recipeId) =>\n    axios.get(`${baseUrl}/${recipeId}`).then(response => response.data)","import './App.css';\nimport {Route} from \"react-router-dom\";\nimport RecipePage from \"./pages/RecipePage\";\n\nfunction App() {\n    return (\n        <div>\n            <Route exact path=\"/\">\n                <p>This is my starter page</p>\n            </Route>\n            <Route path=\"/recipe/:recipeId\">\n                <RecipePage/>\n            </Route>\n        </div>\n    );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n\n  html, body {\n    font-size: 112.5%;\n    margin: 0;\n  }\n  \n  :root {\n    --color-deep-space-sparkle: #526768;\n    --color-polished-pine: #6A9882;\n    --color-turquoise-green: #94CBB1;\n    --color-cambridge-blue: #A7C1AF;\n    --color-alabaster: #E3EADB;\n    --color-cultured: #FAFAFA;\n    --color-silver: #C4C4C4; \n    --color-battleship-grey: #878787;\n  }\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport GlobalStyle from \"./components/GlobalStyle\";\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <GlobalStyle/>\n            <App/>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}