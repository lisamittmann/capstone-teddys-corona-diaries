name: 'Deployment to GCP'

on:
  push

jobs:
  build-infrastructure:
    name: 'Set up infrastructure'
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/credentials.json

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Set Up Credentials
        env:
          SET_UP_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: printf '%s' "$SET_UP_CREDENTIALS" > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Terraform Init
        run: |
          cd iac/terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd iac/terraform
          terraform plan

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: |
          cd iac/terraform
          terraform apply -auto-approve

  build-frontend:
    name: "Build frontend"
    needs: build-infrastructure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: build frontend
        run: |
          cd frontend
          npm ci
          npm run build
      - name: upload frontend
        uses: actions/upload-artifact@v2
        with:
          name: frontend-build
          path: frontend/build/

  build-backend:
    name: "Build backend"
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Download frontend build
        uses: actions/download-artifact@v2
        with:
          name: frontend-build
          path: backend/src/main/resources/static
      - name: Set Up GCloud
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          export_default_credentials: true
      - name: Configure GCloud docker
        run: gcloud auth configure-docker
      - name: Find and Replace - Using Secrets
        run: |
          cd backend/src/main/resources
          sed -i ''s/#{MONGODBURI}#/${{ secrets.MONGODB_URI }}/g'' application.yml
      - name: Bash - Show XML Contents
        run: |
          cd backend/src/main/resources
          cat application.yml
      - name: Build with jib
        run: |
          cd backend
          mvn compile jib:build


